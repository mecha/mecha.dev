<!doctype html>
<html lang="en">

<head>
    <title>
        {{block "title" .}}Base{{end}} | mecha.dev
    </title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta property="og:site_name" content="mecha.dev" />
    <link rel="stylesheet" type="text/css" href="/assets/style.css" />
    <link rel="icon" type="image/png" href="/assets/favicon.png" />
    <link rel="alternate" type="application/rss+xml" title="RSS feed" href="https://mecha.dev/blog/feed?format=rss" />
    <link rel="alternate" type="application/atom+xml" title="Atom feed" href="https://mecha.dev/blog/feed?format=atom" />
    <link rel="alternate" type="application/json" title="JSON feed" href="https://mecha.dev/blog/feed?format=json" />
    <script src="/assets/htmx.min.js" defer></script>
    <script src="/assets/highlight.min.js" defer id="hljs"></script>
    <script type="text/javascript" defer>
        document.getElementById("hljs")?.addEventListener("load", function() {
            hljs.highlightAll();
            document.addEventListener("htmx:afterSwap", hljs.highlightAll);
        });
    </script>
    {{template "theme-selector-js"}}
    {{block "head" .}}{{end}}
</head>

<body id="top" hx-boost="true">
    <div id="dark-reader-msg">you can safely turn off darkreader :)</div>

    {{block "body" .}}
        {{template "main-layout" .}}
    {{end}}

    <script type="module">
        let topNav = document.getElementById("topnav")
        if (topNav) {
            let currentUrl = window.location.toString()
            for (let link of topNav.querySelectorAll("a:not([href='/'])")) {
                if (currentUrl.startsWith(link.href)) {
                    link.classList.add("current");
                    break;
                }
            }
        }
    </script>
</body>

</html>

{{define "main-layout"}}
    <div class="main-layout">
        <header class="eq-bot">
            <a class="logo bare" href="/" aria-label="Home">{{template "logo"}}</a>
            <nav id="topnav">
                {{template "nav-links" .}}
            </nav>
        </header>

        <main>
            {{block "content" .}}{{end}}
        </main>

        <footer class="eq-top">
            {{block "footer-left" .}}
                <p>Copyright 2025 &copy; mecha.dev</p>
            {{end}}
            {{block "footer-right" .}}
                {{template "theme-selector"}}
            {{end}}
        </footer>
    </div>
{{end}}

{{define "nav-links"}}
    <a href="/blog">blog</a>
    <a href="/projects">projects</a>
    <a href="/about">about</a>
    <a href="https://github.com/mecha" target="_blank">github</a>
{{end}}

{{define "theme-selector"}}
    <label>
        <span>colorscheme =</span>
        <select id="theme-selector" onchange="setTheme(event.target.value)">
            <option>viridescent</option>
            <option>tokyonight</option>
            <option>catppuccin</option>
            <option>rose pine</option>
            <option>nord</option>
            <option>gruvbox</option>
            <option>slate</option>
            <option>retina slayer</option>
            <option>lsd</option>
        </select>
    </label>
{{end}}

{{define "theme-selector-js"}}
    <script>
        function getTheme() {
            return localStorage.getItem("theme") || "viridescent";
        }

        /** @param {string} theme */
        function setTheme(theme) {
            localStorage.setItem("theme", theme);
            document.documentElement.setAttribute('theme', theme);
        }

        function updateSelectedTheme() {
            let el = document.getElementById("theme-selector")
            if (el instanceof HTMLSelectElement) {
                el.value = getTheme();
            }
        }

        setTheme(getTheme())

        document.addEventListener("DOMContentLoaded", updateSelectedTheme);
        document.addEventListener("htmx:load", updateSelectedTheme);
    </script>
{{end}}

{{define "logo"}}
                           __                  __           
   ____ ___   ___   _____ / /_   ____ _   ____/ /___  _   __
  / __ `__ \ / _ \ / ___// __ \ / __ `/  / __  // _ \| | / /
 / / / / / //  __// /__ / / / // /_/ /_ / /_/ //  __/| |/ / 
/_/ /_/ /_/ \___/ \___//_/ /_/ \__,_/(_)\__,_/ \___/ |___/  
{{end}}
